{"version":3,"sources":["logo.svg","InputForm.js","GenerateForm.js","subscription.js","Checkout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","InputForm","useState","vapid","setVapid","url","setUrl","Fragment","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","TextField","required","id","name","label","multiline","fullWidth","value","onChange","event","target","localStorage","setItem","autoComplete","helperText","GenerateForm","getItem","subs","setSubs","k","setK","useEffect","console","log","key","style","wordBreak","APIUrl","sendSubscription","subscription","fetch","method","body","JSON","stringify","headers","subscribeUser","convertedVapidKey","base64String","base64","repeat","length","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","urlBase64ToUint8Array","navigator","serviceWorker","ready","then","registration","pushManager","getSubscription","existedSubscription","subscribe","applicationServerKey","userVisibleOnly","newSubscription","catch","e","Notification","permission","error","Copyright","color","align","Link","href","useStyles","makeStyles","theme","appBar","position","layout","width","marginLeft","marginRight","breakpoints","up","paper","marginTop","marginBottom","padding","stepper","buttons","display","justifyContent","button","title","flexGrow","steps","Checkout","classes","React","activeStep","setActiveStep","CssBaseline","AppBar","className","Toolbar","noWrap","Button","Paper","component","Stepper","map","Step","StepLabel","onClick","clear","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","register","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","publicUrl","URL","process","origin","addEventListener","response","contentType","get","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bc41c44b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default function InputForm() {\r\n\r\n  const [vapid, setVapid]=useState(\"\");\r\n\r\n  const [url, setUrl]=useState(\"\");\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n      Add public VAPID key & Server URL\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"vapidkey\"\r\n            name=\"vapidkey\"\r\n            label=\"Public VAPID key\"\r\n            multiline\r\n            fullWidth\r\n            value={vapid}\r\n            onChange={(event) => {setVapid(event.target.value); localStorage.setItem(\"Vapid\",event.target.value) }}\r\n            autoComplete=\"Public VAPID key\"\r\n            helperText={vapid === \"\" ? 'Empty!' : ' '}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"serverurl\"\r\n            name=\"serverurl\"\r\n            label=\"Server URL (Post request endpoint)\"\r\n            fullWidth\r\n            value={url}\r\n            onChange={(event) => {setUrl(event.target.value); localStorage.setItem(\"Url\",event.target.value) }}\r\n            autoComplete=\"Server URL\"\r\n            helperText={url === \"\" ? 'Empty!' : ' '}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}","import React,{useState, useEffect, useRef} from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nexport default function GenerateForm() {\r\n\r\n  const [subs, setSubs]=useState(localStorage.getItem(\"subs\"))\r\n  const [k,setK]=useState(0);\r\n  useEffect(()=>{\r\n    setSubs(localStorage.getItem(\"subs\"))\r\n    if (subs===null)\r\n    {\r\n      setK(k+1)\r\n      console.log(k)\r\n    }\r\n  },[k])\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Subscription object\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n        <Typography key={k} style={{wordBreak:\"break-all\"}}>\r\n        {subs}\r\n        </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}","const APIUrl = localStorage.getItem(\"Url\")\r\n\r\nfunction urlBase64ToUint8Array(base64String) {\r\n  const padding = \"=\".repeat((4 - base64String.length % 4) % 4)\r\n  // eslint-disable-next-line\r\n  const base64 = (base64String + padding).replace(/\\-/g, \"+\").replace(/_/g, \"/\")\r\n\r\n  const rawData = window.atob(base64)\r\n  const outputArray = new Uint8Array(rawData.length)\r\n\r\n  for (let i = 0; i < rawData.length; ++i) {\r\n    outputArray[i] = rawData.charCodeAt(i)\r\n  }\r\n  return outputArray\r\n}\r\n\r\nfunction sendSubscription(subscription) {\r\n  return fetch(APIUrl, {\r\n    method: 'POST',\r\n    body: JSON.stringify(subscription),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  })\r\n}\r\n\r\nexport function subscribeUser() {\r\n    const VapidKey = localStorage.getItem(\"Vapid\")\r\n    const convertedVapidKey = urlBase64ToUint8Array(VapidKey)\r\n    \r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(function(registration) {\r\n      if (!registration.pushManager) {\r\n        console.log('Push manager unavailable.')\r\n        return\r\n      }\r\n\r\n      registration.pushManager.getSubscription().then(function(existedSubscription) {\r\n        if (existedSubscription === null) {\r\n          console.log('No subscription detected, make a request.')\r\n          registration.pushManager.subscribe({\r\n            applicationServerKey: convertedVapidKey,\r\n            userVisibleOnly: true,\r\n          }).then(function(newSubscription) {\r\n            console.log('New subscription added.')\r\n            sendSubscription(newSubscription)\r\n            localStorage.setItem(\"subs\",JSON.stringify(newSubscription))\r\n          }).catch(function(e) {\r\n            if (Notification.permission !== 'granted') {\r\n              console.log('Permission was not granted.')\r\n            } else {\r\n              console.error('An error ocurred during the subscription process.', e)\r\n            }\r\n          })\r\n        } else {\r\n          localStorage.setItem(\"subs\",JSON.stringify(existedSubscription))\r\n          console.log('Existed subscription detected.')\r\n          sendSubscription(existedSubscription)\r\n          console.log(localStorage.getItem(\"subs\"))\r\n        }\r\n      })\r\n    })\r\n      .catch(function(e) {\r\n        console.error('An error ocurred during Service Worker registration.', e)\r\n      })\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputForm from './InputForm';\r\nimport GenerateForm from './GenerateForm';\r\nimport { subscribeUser } from './subscription';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Made with ♡ by '}\r\n      <Link color=\"inherit\" href=\"https://www.linkedin.com/in/dhananjaypurohit/\">\r\n        Dhananjay Purohit\r\n      </Link>{' '}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst steps = ['VAPID key & Server URL', 'Generated Subscription object'];\r\n\r\nexport default function Checkout() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const handleNext = () => {\r\n    if (localStorage.getItem('Vapid')!==null && localStorage.getItem('Url')!==null)\r\n    {\r\n    setActiveStep(activeStep + 1);\r\n    subscribeUser();\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n    localStorage.clear();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar position=\"static\" color=\"default\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.title} noWrap>\r\n            Push Notifications demo\r\n          </Typography>\r\n          <Button color=\"inherit\" href=\"https://github.com/DhananjayPurohit/push-client/\" target=\"_blank\">Github</Button>\r\n          <Button color=\"inherit\" href=\"https://medium.com/@dhananjaypurohit7/build-a-server-for-sending-web-push-notifications-42367d9fafa8\" target=\"_blank\">Docs</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Check push notification server\r\n          </Typography>\r\n          <Stepper activeStep={activeStep} className={classes.stepper}>\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          <React.Fragment>\r\n              <React.Fragment>\r\n                {activeStep===0 ? <InputForm/> : <GenerateForm/>}\r\n                <div className={classes.buttons}>\r\n                {activeStep !== 0 && (\r\n                    <Button onClick={handleBack} className={classes.button}>\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={activeStep === steps.length - 1 ? subscribeUser : handleNext}\r\n                    className={classes.button}\r\n                  >\r\n                    {activeStep === steps.length - 1 ? 'Send' : 'Next'}\r\n                  </Button>\r\n                </div>\r\n              </React.Fragment>\r\n          </React.Fragment>\r\n        </Paper>\r\n        <Copyright />\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Checkout from './Checkout';\n\nfunction App() {\n  return (\n    <div>\n      <Checkout/>\n    </div>\n  );\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swFileName = process.env.NODE_ENV === 'production' ? 'service-worker.js' : 'custom-sw.js'\n      const swUrl = `${publicUrl.origin}/push-client/${swFileName}`;\n\n      \n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { subscribeUser } from './subscription'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\nlocalStorage.clear();\n"],"sourceRoot":""}